This is a testharness.js-based test.
[FAIL] conv2d default + relu
  assert_true: assert_array_approx_equals_ulp: test conv2d relu float32 actual 1.53125 should be close enough to expected 1.5323282480239868 by the acceptable 18 ULP distance, but they have 9045 ULP distance expected true got false
[FAIL] reshape + conv2d default/ float16
  assert_true: assert_array_approx_equals_ulp: test reshape conv2d float16 actual 0 should be close enough to expected 1.5322265625 by the acceptable 18 ULP distance, but they have 15905 ULP distance expected true got false
[FAIL] conv2d default + sigmoid
  assert_true: assert_array_approx_equals_ulp: test conv2d sigmoid float32 actual 0.82177734375 should be close enough to expected 0.8223466873168945 by the acceptable 52 ULP distance, but they have 9552 ULP distance expected true got false
[FAIL] conv2d default + clamp
  assert_true: assert_array_approx_equals_ulp: test conv2d clamp float32 actual 1.53125 should be close enough to expected 1.5323282480239868 by the acceptable 18 ULP distance, but they have 9045 ULP distance expected true got false
[FAIL] conv2d default + leakyRelu
  assert_true: assert_array_approx_equals_ulp: test conv2d leakyRelu float32 actual 1.53125 should be close enough to expected 1.5323282480239868 by the acceptable 19 ULP distance, but they have 9045 ULP distance expected true got false
[FAIL] conv2d default + elu
  assert_true: assert_array_approx_equals_ulp: test conv2d elu float32 actual 1.53125 should be close enough to expected 1.5323282480239868 by the acceptable 36 ULP distance, but they have 9045 ULP distance expected true got false
[FAIL] conv2d default + prelu
  promise_test: Unhandled rejection with value: object "TypeError: Unsupported data type, output 'output' data type float32 must be one of []."
[FAIL] conv2d default + hardSwish
  assert_true: assert_array_approx_equals_ulp: test conv2d hardSwish float32 actual 1.1552734375 should be close enough to expected 1.157502485501543 by the acceptable 22 ULP distance, but they have 18699 ULP distance expected true got false
[FAIL] conv2d default + gelu
  assert_true: assert_array_approx_equals_ulp: test conv2d gelu float32 actual 1.4345703125 should be close enough to expected 1.436219573020935 by the acceptable 36 ULP distance, but they have 13835 ULP distance expected true got false
[FAIL] conv2d default + hardSigmoid
  assert_true: assert_array_approx_equals_ulp: test conv2d hardSigmoid float32 actual 0.80615234375 should be close enough to expected 0.8064656598030677 by the acceptable 20 ULP distance, but they have 5257 ULP distance expected true got false
[FAIL] conv2d default + linear
  assert_true: assert_array_approx_equals_ulp: test conv2d linear float32 actual 1.53125 should be close enough to expected 1.5323282480239868 by the acceptable 20 ULP distance, but they have 9045 ULP distance expected true got false
[FAIL] conv2d default + softplus
  assert_true: assert_array_approx_equals_ulp: test conv2d softplus float32 actual 1.7265625 should be close enough to expected 1.727921485900879 by the acceptable 36 ULP distance, but they have 11400 ULP distance expected true got false
[FAIL] conv2d default + softsign
  assert_true: assert_array_approx_equals_ulp: test conv2d softsign float32 actual 0.6044921875 should be close enough to expected 0.6051064941347312 by the acceptable 21 ULP distance, but they have 10306 ULP distance expected true got false
[FAIL] convTranspose2d default + relu
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d relu float32 actual 0 should be close enough to expected 0.1933533400297165 by the acceptable 8 ULP distance, but they have 1044774507 ULP distance expected true got false
[FAIL] convTranspose2d default + leakyRelu
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d leakyRelu float32 actual 0 should be close enough to expected 0.1933533400297165 by the acceptable 9 ULP distance, but they have 1044774507 ULP distance expected true got false
[FAIL] convTranspose2d default + sigmoid
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d sigmoid float32 actual 0 should be close enough to expected 0.5481882691383362 by the acceptable 42 ULP distance, but they have 1057773073 ULP distance expected true got false
[FAIL] convTranspose2d default + softplus
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d softplus float32 actual 0 should be close enough to expected 0.7944898009300232 by the acceptable 26 ULP distance, but they have 1061905327 ULP distance expected true got false
[FAIL] convTranspose2d default + clamp
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d clamp float32 actual 0 should be close enough to expected 0.1933533329919328 by the acceptable 8 ULP distance, but they have 1044774507 ULP distance expected true got false
[FAIL] convTranspose2d default + elu
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d elu float32 actual 0 should be close enough to expected 0.1933533400297165 by the acceptable 26 ULP distance, but they have 1044774507 ULP distance expected true got false
[FAIL] convTranspose2d default + gelu
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d gelu float32 actual 0 should be close enough to expected 0.11149890720844269 by the acceptable 26 ULP distance, but they have 1038375306 ULP distance expected true got false
[FAIL] convTranspose2d default + hardSigmoid
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d hardSigmoid float32 actual 0 should be close enough to expected 0.5386706590652466 by the acceptable 10 ULP distance, but they have 1057613394 ULP distance expected true got false
[FAIL] convTranspose2d default + hardSwish
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d hardSwish float32 actual 0 should be close enough to expected 0.10290758311748505 by the acceptable 12 ULP distance, but they have 1037222198 ULP distance expected true got false
[FAIL] convTranspose2d default + linear
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d linear float32 actual 0 should be close enough to expected 0.1933533329919328 by the acceptable 10 ULP distance, but they have 1044774507 ULP distance expected true got false
[FAIL] convTranspose2d default + prelu
  promise_test: Unhandled rejection with value: object "TypeError: Unsupported data type, output 'output' data type float32 must be one of []."
[FAIL] convTranspose2d default + softsign
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d softsign float32 actual 0 should be close enough to expected 0.16202521324157715 by the acceptable 11 ULP distance, but they have 1042672112 ULP distance expected true got false
[FAIL] batchNormalization default + relu
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported rank for batchNormalization. It must be between 3 and 5."
[FAIL] batchNormalization default + leakyRelu
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported rank for batchNormalization. It must be between 3 and 5."
[FAIL] batchNormalization default + sigmoid
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported rank for batchNormalization. It must be between 3 and 5."
[FAIL] batchNormalization default + clamp
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported rank for batchNormalization. It must be between 3 and 5."
[FAIL] batchNormalization default + prelu
  promise_test: Unhandled rejection with value: object "TypeError: Unsupported data type, output 'output' data type float32 must be one of []."
[FAIL] batchNormalization default + elu
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported rank for batchNormalization. It must be between 3 and 5."
[FAIL] batchNormalization options.axis=0 + gelu
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported axis for batchNormalization. It must be the channel dimension."
[FAIL] batchNormalization default + hardSigmoid
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported rank for batchNormalization. It must be between 3 and 5."
[FAIL] batchNormalization default + hardSwish
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported rank for batchNormalization. It must be between 3 and 5."
[FAIL] batchNormalization default + linear
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported rank for batchNormalization. It must be between 3 and 5."
[FAIL] batchNormalization options.axis=0 + softplus
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported axis for batchNormalization. It must be the channel dimension."
[FAIL] batchNormalization default + softsign
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported rank for batchNormalization. It must be between 3 and 5."
[FAIL] conv2d with options.inputLayout='nchw' + softmax
  assert_true: assert_array_approx_equals_ulp: test conv2d softmax float32 actual 0.33315548300743103 should be close enough to expected 0.3331032991409302 by the acceptable 20 ULP distance, but they have 1751 ULP distance expected true got false
[FAIL] convTranspose2d default + softmax
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d softmax float32 actual 0 should be close enough to expected 1 by the acceptable 14 ULP distance, but they have 1065353216 ULP distance expected true got false
[FAIL] convTranspose2d with options.inputLayout=nchw + softmax
  assert_true: assert_array_approx_equals_ulp: test convTranspose2d softmax float32 actual 0.4983367919921875 should be close enough to expected 0.49833576343872565 by the acceptable 27 ULP distance, but they have 35 ULP distance expected true got false
[FAIL] batchNormalization options.axis=0  + softmax
  promise_test: Unhandled rejection with value: object "NotSupportedError: Failed to execute 'build' on 'MLGraphBuilder': Unsupported axis for batchNormalization. It must be the channel dimension."
Harness: the test ran to completion.

