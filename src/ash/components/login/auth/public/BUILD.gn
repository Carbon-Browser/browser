# Copyright 2022 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")

assert(is_chromeos_ash, "Non-Chrome-OS builds must not depend on //ash")

component("authpublic") {
  defines = [ "IS_ASH_LOGIN_AUTH_IMPL" ]
  public_deps = [ ":challenge_response_key" ]
  deps = [
    "//ash/components/cryptohome",
    "//ash/constants",
    "//base",
    "//chromeos/ash/components/dbus/userdataauth:userdataauth_proto",
    "//components/account_id",
    "//components/password_manager/core/browser:password_hash_data",
    "//components/prefs",
    "//components/user_manager",
    "//crypto",
    "//google_apis",
    "//net",
    "//third_party/abseil-cpp:absl",
  ]
  sources = [
    "auth_callbacks.h",
    "auth_factors_data.cc",
    "auth_factors_data.h",
    "auth_failure.cc",
    "auth_failure.h",
    "auth_session_status.h",
    "cryptohome_error.cc",
    "cryptohome_error.h",
    "cryptohome_key_constants.cc",
    "cryptohome_key_constants.h",
    "key.cc",
    "key.h",
    "operation_chain_runner.cc",
    "operation_chain_runner.h",
    "saml_password_attributes.cc",
    "saml_password_attributes.h",
    "sync_trusted_vault_keys.cc",
    "sync_trusted_vault_keys.h",
    "user_context.cc",
    "user_context.h",
  ]
}

# Separate target to break cyclic dependency with //ash/components/cryptohome
component("challenge_response_key") {
  defines = [ "IS_ASH_LOGIN_AUTH_IMPL" ]
  deps = [ "//base" ]
  sources = [
    "challenge_response_key.cc",
    "challenge_response_key.h",
  ]
}
