// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ash.personalization_app.mojom;

import "mojo/public/mojom/base/file_path.mojom";
import "url/mojom/url.mojom";

// The unique ID to identify a template.
enum SeaPenTemplateId {
  kFlower = 0,
  kMineral,
};

// A variable in the template text that can be mapped to multiple option values.
enum SeaPenTemplateChip {
  kFlowerType = 0,
  kFlowerColor,
  kMineralName,
  kMineralColor,
};

// The valid option values of each chip.
enum SeaPenTemplateOption {
  // <flower_type> options
  kFlowerTypeRose = 0,
  kFlowerTypeCallaLily,
  kFlowerTypeWindflower,
  kFlowerTypeTulip,
  kFlowerTypeLilyOfTheValley,
  kFlowerTypeBirdOfParadise,
  kFlowerTypeOrchid,
  kFlowerTypeRanunculus,
  kFlowerTypeDaisy,
  kFlowerTypeHydrangeas,
  // <flower_color> options
  kFlowerColorPink,
  kFlowerColorPurple,
  kFlowerColorBlue,
  kFlowerColorWhite,
  kFlowerColorCoral,
  kFlowerColorYellow,
  kFlowerColorGreen,
  kFlowerColorRed,
  // <mineral_name> options
  kMineralNameWhiteQuartz,
  kMineralNameAmethyst,
  kMineralNameBlueSapphire,
  kMineralNameAmberCarnelian,
  kMineralNameEmerald,
  kMineralNameRuby,
  // <mineral_color> options
  kMineralColorWhite,
  kMineralColorPeriwinkle,
  kMineralColorPink,
  kMineralColorLavender,
};

// Encapsulates metadata for a thumbnail image, which can be displayed as an
// image tile in the SeaPen search result page.
struct SeaPenThumbnail {
    // Data url to display the image.
    url.mojom.Url image;

    // An id that uniquely identifies the image.
    uint32 id;
};

// The information needed to query template wallpapers. The possible `id` and
// `options` values are defined in cs/ChromeOsWallpaperQueryProcessor.kt. They
// are not controlled by the renderer. The browser is responsible for validating
// the values.
struct SeaPenTemplateQuery {
  // A unique template ID.
  SeaPenTemplateId id;

  // The chips and their selected options.
  map<SeaPenTemplateChip, SeaPenTemplateOption> options;
};

// A text or template query for constructing a Manta request.
union SeaPenQuery {
  // Set if the query is from text input.
  string text_query;

  // Set if the query is from template input.
  SeaPenTemplateQuery template_query;
};

// Maximum allowable search text length, in bytes.
// When validating length in Javascript, be careful of the difference between
// UTF-16 (Javascript) length and UTF-8 length.
const uint32 kMaximumSearchWallpaperTextBytes = 3000;

// Provides APIs to perform wallpaper searches. Uses APIs in
// `manta.proto` to send search requests to a server.
// Implemented in the browser process, and called by the ChromeOS
// Personalization App (chrome://personalization) in a renderer process.
interface SeaPenProvider {

    // Given a user text input, return a set of matching images.
    // `images` will be null in case of an unrecoverable error, such as network
    // failure.
    // `images` will be empty array when the request succeeded, but no matching
    // images were returned.
    // `text` must be smaller than `kMaximumSearchWallpaperTextBytes` bytes.
    SearchWallpaper(SeaPenQuery query) => (array<SeaPenThumbnail>? images);

    // Select a thumbnail and set as the system wallpaper for the current user.
    SelectSeaPenThumbnail(uint32 id) => (bool success);

    // Sets the given Sea Pen image as the user's background.
    SelectRecentSeaPenImage(mojo_base.mojom.FilePath path) => (bool success);

    // Gets the recently used sea pen wallpapers. `images` will be null
    // on failure.
    GetRecentSeaPenImages() => (array<mojo_base.mojom.FilePath>? images);

    // Fetch a thumbnail data url for the given recent sea pen image path.
    // `url` will be empty on failure.
    GetRecentSeaPenImageThumbnail(mojo_base.mojom.FilePath path) =>
        (url.mojom.Url url);
};
